<application>
  <component name="IntentionManagerSettings">
    <ignoreAction name="Database/Run query in console" />
    <ignoreAction name="Groovy/Grab" />
    <ignoreAction name="Groovy/Closures/Make Closure Call Explicit" />
    <ignoreAction name="Groovy/Closures/Make Closure Call Implicit" />
    <ignoreAction name="Groovy/Closures/Replace Each With For-In" />
    <ignoreAction name="Groovy/Closures/Replace For-In With Each" />
    <ignoreAction name="Groovy/Comments/Replace With C-Style Comment" />
    <ignoreAction name="Groovy/Control Flow/Add constructor parameter for field" />
    <ignoreAction name="Groovy/Control Flow/DeMorgan's Law" />
    <ignoreAction name="Groovy/Control Flow/Expand Boolean" />
    <ignoreAction name="Groovy/Control Flow/Flip Comparison Operands" />
    <ignoreAction name="Groovy/Control Flow/Flip Conditional" />
    <ignoreAction name="Groovy/Control Flow/Flip Conjunction Operands" />
    <ignoreAction name="Groovy/Control Flow/Flip if statements" />
    <ignoreAction name="Groovy/Control Flow/Invert 'if' condition" />
    <ignoreAction name="Groovy/Control Flow/Merge Else If" />
    <ignoreAction name="Groovy/Control Flow/Merge Nested Ifs To ANDed Condition" />
    <ignoreAction name="Groovy/Control Flow/Negate Comparison" />
    <ignoreAction name="Groovy/Control Flow/Remove redundant 'else' keyword" />
    <ignoreAction name="Groovy/Control Flow/Replace ''?:'' with if else" />
    <ignoreAction name="Groovy/Control Flow/Replace if-statement with ternary operator" />
    <ignoreAction name="Groovy/Control Flow/Simplify Conditional Expression" />
    <ignoreAction name="Groovy/Control Flow/Split Else If" />
    <ignoreAction name="Groovy/Control Flow/Split into 2 if's" />
    <ignoreAction name="Groovy/Declaration/Create field for parameter" />
    <ignoreAction name="Groovy/Declaration/Declare explicit type" />
    <ignoreAction name="Groovy/Declaration/Groovy Introduce local variable" />
    <ignoreAction name="Groovy/Declaration/Implement abstract class or interface" />
    <ignoreAction name="Groovy/Declaration/Make 'private'" />
    <ignoreAction name="Groovy/Declaration/Make 'protected'" />
    <ignoreAction name="Groovy/Declaration/Make 'public'" />
    <ignoreAction name="Groovy/Declaration/Remove explicit type declaration" />
    <ignoreAction name="Groovy/Expression conversions/Break string on '\n'" />
    <ignoreAction name="Groovy/Expression conversions/Cast to char" />
    <ignoreAction name="Groovy/Expression conversions/Convert GString To String" />
    <ignoreAction name="Groovy/Expression conversions/Convert Groovy native map to class instances" />
    <ignoreAction name="Groovy/Expression conversions/Convert Indexing Method To [] Form" />
    <ignoreAction name="Groovy/Expression conversions/Convert JUnit assertion to assert statement" />
    <ignoreAction name="Groovy/Expression conversions/Convert Java-Style Array Creation to Groovy Syntax" />
    <ignoreAction name="Groovy/Expression conversions/Convert String Concatenation to GString" />
    <ignoreAction name="Groovy/Expression conversions/Convert To Binary" />
    <ignoreAction name="Groovy/Expression conversions/Convert To Decimal" />
    <ignoreAction name="Groovy/Expression conversions/Convert To Hexadecimal" />
    <ignoreAction name="Groovy/Expression conversions/Convert To Octal" />
    <ignoreAction name="Groovy/Expression conversions/Convert [] Form To Index Method" />
    <ignoreAction name="Groovy/Expression conversions/Convert cast expression to safe cast expression" />
    <ignoreAction name="Groovy/Expression conversions/Convert literal to multiline literal" />
    <ignoreAction name="Groovy/Expression conversions/Convert method to property of closure type" />
    <ignoreAction name="Groovy/Expression conversions/Convert multiline string to single-line" />
    <ignoreAction name="Groovy/Expression conversions/Convert property to method" />
    <ignoreAction name="Groovy/Expression conversions/Convert simple getter to property" />
    <ignoreAction name="Groovy/Expression conversions/Convert string literal to dollar-slashy string" />
    <ignoreAction name="Groovy/Expression conversions/Convert string literal to regular expression" />
    <ignoreAction name="Groovy/Expression conversions/Move class to separate file" />
    <ignoreAction name="Groovy/Expression conversions/Remove Unnecessary Braces in GString" />
    <ignoreAction name="Groovy/Expression conversions/Remove Unnecessary Parentheses from Method Call" />
    <ignoreAction name="Groovy/Expression conversions/Remove unnecessary escape characters" />
    <ignoreAction name="Groovy/Expression conversions/Rename file to corresponding class name" />
    <ignoreAction name="Groovy/Expression conversions/Split Variable Declaration" />
    <ignoreAction name="Groovy/Groovy-style/Add On Demand Static Import in Groovy" />
    <ignoreAction name="Groovy/Groovy-style/Add Single-Member Static Import in Groovy" />
    <ignoreAction name="Groovy/Groovy-style/Add return type to method declaration" />
    <ignoreAction name="Groovy/Groovy-style/Change Java-style accessor invocation to Groovy-style property reference" />
    <ignoreAction name="Groovy/Groovy-style/Change anonymous class to dynamic instantiation" />
    <ignoreAction name="Groovy/Groovy-style/Convert method or closure parameters to map entries" />
    <ignoreAction name="Groovy/Groovy-style/Format braces in separate lines" />
    <ignoreAction name="Groovy/Groovy-style/Format closing closure braces in one line" />
    <ignoreAction name="Groovy/Groovy-style/Remove redundant .class" />
    <ignoreAction name="Groovy/Groovy-style/Remove unnecessary 'return' keyword" />
    <ignoreAction name="Groovy/Groovy-style/Remove unnecessary semicolons from selected text" />
    <ignoreAction name="Groovy/Other/Alias import statically imported member" />
    <ignoreAction name="Groovy/Other/Copy string concatenation text to clipboard" />
    <ignoreAction name="Groovy/Other/Create missing 'switch' branches" />
    <ignoreAction name="Groovy/Other/Sort map entries alphabetically" />
    <ignoreAction name="Guice/Move Binding Scope To Class" />
    <ignoreAction name="Guice/Move Binding To Class" />
    <ignoreAction name="Guice/Move Provider Binding To Class" />
    <ignoreAction name="Guice/Toggle Injection Required" />
    <ignoreAction name="HTML/Update background-image size" />
    <ignoreAction name="Java/Annotations/Add Annotation" />
    <ignoreAction name="Java/Annotations/Add Override Annotation" />
    <ignoreAction name="Java/Annotations/Annotate overriding methods and their parameters" />
    <ignoreAction name="Java/Annotations/Deannotate" />
    <ignoreAction name="Java/Annotations/Edit method contract" />
    <ignoreAction name="Java/Annotations/Expand Annotation to Normal Form" />
    <ignoreAction name="Java/Annotations/Make Inferred Annotations Explicit" />
    <ignoreAction name="Java/Annotations/Show/Hide Annotations Inferred from Source Code" />
    <ignoreAction name="Java/Boolean/DeMorgan Law" />
    <ignoreAction name="Java/Boolean/Expand Boolean" />
    <ignoreAction name="Java/Boolean/Expand Boolean to multiple ifs" />
    <ignoreAction name="Java/Boolean/Flip Comparison" />
    <ignoreAction name="Java/Boolean/Negate Comparison" />
    <ignoreAction name="Java/Boolean/Negate Conditional" />
    <ignoreAction name="Java/Boolean/Remove Boolean Equality" />
    <ignoreAction name="Java/Boolean/Replace Equality with Equals" />
    <ignoreAction name="Java/Boolean/Replace Equality with Safe Equals" />
    <ignoreAction name="Java/Boolean/Replace Equals with Equality" />
    <ignoreAction name="Java/Boolean/Simplify boolean expression" />
    <ignoreAction name="Java/Comments/Move Comment to Separate Line" />
    <ignoreAction name="Java/Comments/Replace with Block Comment" />
    <ignoreAction name="Java/Comments/Replace with End Of Line Comment" />
    <ignoreAction name="Java/Concurrency/Convert to ThreadLocal" />
    <ignoreAction name="Java/Concurrency/Convert to atomic" />
    <ignoreAction name="Java/Concurrency/Convert variable to 'java.util.concurrent.atomic.LongAdder'" />
    <ignoreAction name="Java/Conditional Operator/Flip Conditional" />
    <ignoreAction name="Java/Conditional Operator/Remove Pointless Conditional" />
    <ignoreAction name="Java/Conditional Operator/Replace Conditional with If Else" />
    <ignoreAction name="Java/Conditional Operator/Replace If Else with Conditional" />
    <ignoreAction name="Java/Conditional Operator/Replace conditional expression with boolean expression" />
    <ignoreAction name="Java/Control Flow/Add Braces" />
    <ignoreAction name="Java/Control Flow/Convert '.compareTo()' method to '.equals()' (may change semantics)" />
    <ignoreAction name="Java/Control Flow/Convert '.equals()' to 'java.util.Objects.equals()'" />
    <ignoreAction name="Java/Control Flow/Create Enum Switch Branches" />
    <ignoreAction name="Java/Control Flow/Create switch statement" />
    <ignoreAction name="Java/Control Flow/Extract If Condition" />
    <ignoreAction name="Java/Control Flow/Extract While Loop Condition to Internal If Statement" />
    <ignoreAction name="Java/Control Flow/Invert 'if' condition" />
    <ignoreAction name="Java/Control Flow/Iterate" />
    <ignoreAction name="Java/Control Flow/Merge Else If" />
    <ignoreAction name="Java/Control Flow/Merge Equivalent Ifs to ORed Condition" />
    <ignoreAction name="Java/Control Flow/Merge Nested Ifs to ANDed Condition" />
    <ignoreAction name="Java/Control Flow/Merge Parallel Ifs" />
    <ignoreAction name="Java/Control Flow/Remove Braces" />
    <ignoreAction name="Java/Control Flow/Remove redundant 'else'" />
    <ignoreAction name="Java/Control Flow/Replace Assert with If Statement" />
    <ignoreAction name="Java/Control Flow/Replace Do While Loop with While Loop" />
    <ignoreAction name="Java/Control Flow/Replace For Loop with While Loop" />
    <ignoreAction name="Java/Control Flow/Replace For-each Loop with Indexed For Loop" />
    <ignoreAction name="Java/Control Flow/Replace For-each Loop with Iterator For Loop" />
    <ignoreAction name="Java/Control Flow/Replace For-each Loop with Optimized Indexed For Loop" />
    <ignoreAction name="Java/Control Flow/Replace If with Assert Statement" />
    <ignoreAction name="Java/Control Flow/Replace If with Switch" />
    <ignoreAction name="Java/Control Flow/Replace Switch with If" />
    <ignoreAction name="Java/Control Flow/Replace While Loop with Do While Loop" />
    <ignoreAction name="Java/Control Flow/Reverse Direction of For Loop" />
    <ignoreAction name="Java/Control Flow/Simplify If Else" />
    <ignoreAction name="Java/Control Flow/Split Else If" />
    <ignoreAction name="Java/Control Flow/Split If" />
    <ignoreAction name="Java/Control Flow/Swap 'if' statements" />
    <ignoreAction name="Java/Declaration/Add Array Creation Expression" />
    <ignoreAction name="Java/Declaration/Add Javadoc" />
    <ignoreAction name="Java/Declaration/Add Runtime Exception to Method Signature" />
    <ignoreAction name="Java/Declaration/Assign Parameter to Field" />
    <ignoreAction name="Java/Declaration/Bind parameters to fields" />
    <ignoreAction name="Java/Declaration/Cast expression" />
    <ignoreAction name="Java/Declaration/Change Variable Type to Type of Initializer" />
    <ignoreAction name="Java/Declaration/Change class type parameter" />
    <ignoreAction name="Java/Declaration/Convert Color representation" />
    <ignoreAction name="Java/Declaration/Convert Interface to Class" />
    <ignoreAction name="Java/Declaration/Convert Method to Variable Argument Method" />
    <ignoreAction name="Java/Declaration/Convert Variable Argument Parameter to Array Parameter" />
    <ignoreAction name="Java/Declaration/Copy Abstract Method Implementation" />
    <ignoreAction name="Java/Declaration/Create Local Var from instanceof Usage" />
    <ignoreAction name="Java/Declaration/Create Test" />
    <ignoreAction name="Java/Declaration/Create field for parameter" />
    <ignoreAction name="Java/Declaration/Expand lambda expression body to code block" />
    <ignoreAction name="Java/Declaration/Generate missed test methods" />
    <ignoreAction name="Java/Declaration/Generate overloaded method with default parameter value" />
    <ignoreAction name="Java/Declaration/Generate overloaded method with default parameter values" />
    <ignoreAction name="Java/Declaration/Implement Abstract Method" />
    <ignoreAction name="Java/Declaration/Implement abstract class or interface" />
    <ignoreAction name="Java/Declaration/Infer lambda parameter type" />
    <ignoreAction name="Java/Declaration/Join Declaration and Assignment" />
    <ignoreAction name="Java/Declaration/Make Type Generic" />
    <ignoreAction name="Java/Declaration/Make method default" />
    <ignoreAction name="Java/Declaration/Move assignment to field declaration" />
    <ignoreAction name="Java/Declaration/Move initializer to constructor" />
    <ignoreAction name="Java/Declaration/Move initializer to setUp method" />
    <ignoreAction name="Java/Declaration/Push condition inside call" />
    <ignoreAction name="Java/Declaration/Remove redundant types" />
    <ignoreAction name="Java/Declaration/Replace Adapter Extension with Listener Implementation" />
    <ignoreAction name="Java/Declaration/Replace Diamond with Explicit Type Arguments" />
    <ignoreAction name="Java/Declaration/Replace Exceptions in Throws Clause with Single More General Exception" />
    <ignoreAction name="Java/Declaration/Replace implements with static import" />
    <ignoreAction name="Java/Declaration/Replace lambda with anonymous class" />
    <ignoreAction name="Java/Declaration/Replace method reference with lambda" />
    <ignoreAction name="Java/Declaration/Replace with Java Style Array Declaration" />
    <ignoreAction name="Java/Declaration/Split Declaration" />
    <ignoreAction name="Java/Declaration/Split Declaration and Initialization" />
    <ignoreAction name="Java/Declaration/Unimplement Interface/Class" />
    <ignoreAction name="Java/Declaration/Wrap Vararg Arguments with Explicit Array Creation" />
    <ignoreAction name="Java/I18N/Annotate capitalization type" />
    <ignoreAction name="Java/I18N/Convert to Basic Latin" />
    <ignoreAction name="Java/I18N/Replace Concatenation with Formatted Output" />
    <ignoreAction name="Java/Imports/Add On Demand Static Import" />
    <ignoreAction name="Java/Imports/Add Single-Member Static Import" />
    <ignoreAction name="Java/Imports/Expand Static Import" />
    <ignoreAction name="Java/Imports/Replace On Demand Import with Single Class Imports" />
    <ignoreAction name="Java/Imports/Replace Qualified Name with Import" />
    <ignoreAction name="Java/Imports/Replace cast with variable" />
    <ignoreAction name="Java/JUnit/Convert @DataPoint(s) annotation holder" />
    <ignoreAction name="Java/JUnit/Convert JUnit3 Test Case to JUnit4" />
    <ignoreAction name="Java/JUnit/Create JUnit Assertion" />
    <ignoreAction name="Java/JUnit/Flip Assert Literal" />
    <ignoreAction name="Java/JUnit/Replace assertEquals with assertTrue, assertFalse, or assertNull" />
    <ignoreAction name="Java/JUnit/Replace assertTrue, assertFalse, or assertNull with assertEquals" />
    <ignoreAction name="Java/Modifiers/Make Package-Private" />
    <ignoreAction name="Java/Modifiers/Make Private" />
    <ignoreAction name="Java/Modifiers/Make Protected" />
    <ignoreAction name="Java/Modifiers/Make Public" />
    <ignoreAction name="Java/Numbers/Convert to Binary" />
    <ignoreAction name="Java/Numbers/Convert to Decimal" />
    <ignoreAction name="Java/Numbers/Convert to Hexadecimal" />
    <ignoreAction name="Java/Numbers/Convert to Octal" />
    <ignoreAction name="Java/Numbers/Convert to Plain" />
    <ignoreAction name="Java/Numbers/Convert to Scientific Notation" />
    <ignoreAction name="Java/Numbers/Underscores in numeric literals" />
    <ignoreAction name="Java/Other/Add Clarifying Parentheses" />
    <ignoreAction name="Java/Other/Compute Constant Value" />
    <ignoreAction name="Java/Other/Compute Constant Value for Subexpression" />
    <ignoreAction name="Java/Other/Extract Increment" />
    <ignoreAction name="Java/Other/Flip Binary Expression" />
    <ignoreAction name="Java/Other/Flip Commutative Method Call" />
    <ignoreAction name="Java/Other/Flip Setter Call(s)" />
    <ignoreAction name="Java/Other/Flip prefix/postfix expression" />
    <ignoreAction name="Java/Other/Make Call Chain Into Call Sequence" />
    <ignoreAction name="Java/Other/Merge Sequential Method Calls into Call Chain" />
    <ignoreAction name="Java/Other/Remove Unnecessary Parentheses" />
    <ignoreAction name="Java/Other/Replace Assignment with Operator Assignment" />
    <ignoreAction name="Java/Other/Replace Assignment with Postfix Expression" />
    <ignoreAction name="Java/Other/Replace Octal Escape with Unicode Escape" />
    <ignoreAction name="Java/Other/Replace Operator Assignment with Assignment" />
    <ignoreAction name="Java/Other/Replace Operator Assignment with Postfix Expression" />
    <ignoreAction name="Java/Other/Replace Postfix Expression with Assignment" />
    <ignoreAction name="Java/Other/Replace Postfix Expression with Operator Assignment" />
    <ignoreAction name="Java/Other/Replace Unicode Escape with Unescaped Character" />
    <ignoreAction name="Java/Other/Swap Method Call Arguments" />
    <ignoreAction name="Java/Other/Use 'java.util.Objects.requireNonNull()' Expression" />
    <ignoreAction name="Java/Refactorings/Encapsulate field" />
    <ignoreAction name="Java/Refactorings/Introduce local variable" />
    <ignoreAction name="Java/Shift Operation/Replace Multiply with Shift" />
    <ignoreAction name="Java/Shift Operation/Replace Shift with Multiply" />
    <ignoreAction name="Java/Streams/Merge filters" />
    <ignoreAction name="Java/Streams/Split filter" />
    <ignoreAction name="Java/Strings/Break string on '\n'" />
    <ignoreAction name="Java/Strings/Copy String Concatenation Text to the Clipboard" />
    <ignoreAction name="Java/Strings/Fix Character Literal" />
    <ignoreAction name="Java/Strings/Join Concatenated String Literals" />
    <ignoreAction name="Java/Strings/Replace + with StringBuilder.append()" />
    <ignoreAction name="Java/Strings/Replace Char with String" />
    <ignoreAction name="Java/Strings/Replace String Concatenation with String.format()" />
    <ignoreAction name="Java/Strings/Replace String with Char" />
    <ignoreAction name="Java/Try Statements/Detail Exceptions" />
    <ignoreAction name="Java/Try Statements/Merge Nested Try Statements" />
    <ignoreAction name="Java/Try Statements/Replace Catch Section with Throws Declaration" />
    <ignoreAction name="Java/Try Statements/Replace Try-With-Resources with Try-Finally" />
    <ignoreAction name="Java/Try Statements/Split Multi-Catch into Separate Catch Blocks" />
    <ignoreAction name="Java/Try Statements/Split Try Statement with Multiple Resources" />
    <ignoreAction name="Java/Try Statements/Surround with try-with-resources block" />
    <ignoreAction name="JavaFX/Collapse tag to attribute" />
    <ignoreAction name="JavaFX/Expand attribute to tag" />
    <ignoreAction name="JavaFX/Switch CSS dialect" />
    <ignoreAction name="JavaFX/Use binary css file" />
    <ignoreAction name="Kotlin/Add 'const' modifier" />
    <ignoreAction name="Kotlin/Add 'operator' modifier" />
    <ignoreAction name="Kotlin/Add 'replaceWith' argument to 'Deprecated' annotation" />
    <ignoreAction name="Kotlin/Add braces" />
    <ignoreAction name="Kotlin/Add explicit type arguments" />
    <ignoreAction name="Kotlin/Add import for member" />
    <ignoreAction name="Kotlin/Add indices to 'for' loop" />
    <ignoreAction name="Kotlin/Add name to argument" />
    <ignoreAction name="Kotlin/Add val/var to primary constructor parameter" />
    <ignoreAction name="Kotlin/Change file's package to match directory" />
    <ignoreAction name="Kotlin/Change package" />
    <ignoreAction name="Kotlin/Convert anonymous function to lambda expression" />
    <ignoreAction name="Kotlin/Convert concatenation to template" />
    <ignoreAction name="Kotlin/Convert function to property" />
    <ignoreAction name="Kotlin/Convert member to extension" />
    <ignoreAction name="Kotlin/Convert object literal to lambda" />
    <ignoreAction name="Kotlin/Convert parameter to receiver" />
    <ignoreAction name="Kotlin/Convert property initializer to getter" />
    <ignoreAction name="Kotlin/Convert property to function" />
    <ignoreAction name="Kotlin/Convert receiver to parameter" />
    <ignoreAction name="Kotlin/Convert template to concatenated string" />
    <ignoreAction name="Kotlin/Convert to block body" />
    <ignoreAction name="Kotlin/Convert to expression body" />
    <ignoreAction name="Kotlin/Create Kotlin subclass" />
    <ignoreAction name="Kotlin/Create test" />
    <ignoreAction name="Kotlin/DeMorgan Law" />
    <ignoreAction name="Kotlin/Eliminate argument of 'when'" />
    <ignoreAction name="Kotlin/Flatten 'when' expression" />
    <ignoreAction name="Kotlin/Flip binary expression" />
    <ignoreAction name="Kotlin/Implement abstract member" />
    <ignoreAction name="Kotlin/Import members with '*'" />
    <ignoreAction name="Kotlin/Insert curly braces around variable" />
    <ignoreAction name="Kotlin/Introduce argument to 'when'" />
    <ignoreAction name="Kotlin/Introduce backing property" />
    <ignoreAction name="Kotlin/Invert 'if' condition" />
    <ignoreAction name="Kotlin/Iterate over collection" />
    <ignoreAction name="Kotlin/Make internal" />
    <ignoreAction name="Kotlin/Make private" />
    <ignoreAction name="Kotlin/Make protected" />
    <ignoreAction name="Kotlin/Make public" />
    <ignoreAction name="Kotlin/Merge 'when' expressions" />
    <ignoreAction name="Kotlin/Move assignment to initializer" />
    <ignoreAction name="Kotlin/Move declaration to separate file" />
    <ignoreAction name="Kotlin/Move file to package-matching directory" />
    <ignoreAction name="Kotlin/Move lambda argument into parentheses" />
    <ignoreAction name="Kotlin/Move lambda argument out of parentheses" />
    <ignoreAction name="Kotlin/Move out of companion object" />
    <ignoreAction name="Kotlin/Move to companion object" />
    <ignoreAction name="Kotlin/Remove argument name" />
    <ignoreAction name="Kotlin/Remove braces" />
    <ignoreAction name="Kotlin/Remove curly braces" />
    <ignoreAction name="Kotlin/Remove explicit lambda parameter types (may break code)" />
    <ignoreAction name="Kotlin/Remove explicit supertype qualification" />
    <ignoreAction name="Kotlin/Remove explicit type arguments" />
    <ignoreAction name="Kotlin/Remove explicit type specification" />
    <ignoreAction name="Kotlin/Remove indices in 'for' loop" />
    <ignoreAction name="Kotlin/Remove unnecessary parentheses" />
    <ignoreAction name="Kotlin/Replace '!!' expression with 'if' expression" />
    <ignoreAction name="Kotlin/Replace 'assert' with 'if' statement" />
    <ignoreAction name="Kotlin/Replace 'contains' call with 'in' operator" />
    <ignoreAction name="Kotlin/Replace 'get' or 'set' call with indexing operator" />
    <ignoreAction name="Kotlin/Replace 'if' expression with '!!' expression" />
    <ignoreAction name="Kotlin/Replace 'if' expression with assignment" />
    <ignoreAction name="Kotlin/Replace 'if' expression with elvis expression" />
    <ignoreAction name="Kotlin/Replace 'if' expression with return" />
    <ignoreAction name="Kotlin/Replace 'if' expression with safe access expression" />
    <ignoreAction name="Kotlin/Replace 'if' with 'assert' statement" />
    <ignoreAction name="Kotlin/Replace 'if' with 'when'" />
    <ignoreAction name="Kotlin/Replace 'if' with elvis operator" />
    <ignoreAction name="Kotlin/Replace 'invoke' with direct call" />
    <ignoreAction name="Kotlin/Replace 'it' with explicit parameter" />
    <ignoreAction name="Kotlin/Replace 'substring' call with 'dropLast' call" />
    <ignoreAction name="Kotlin/Replace 'substring' call with 'substringAfter' call" />
    <ignoreAction name="Kotlin/Replace 'substring' call with 'substringBefore' call" />
    <ignoreAction name="Kotlin/Replace 'substring' call with 'take' call" />
    <ignoreAction name="Kotlin/Replace 'when' expression with assignment" />
    <ignoreAction name="Kotlin/Replace 'when' expression with return" />
    <ignoreAction name="Kotlin/Replace 'when' with 'if'" />
    <ignoreAction name="Kotlin/Replace assert with '!!' or '?:'" />
    <ignoreAction name="Kotlin/Replace assignment with 'if' expression" />
    <ignoreAction name="Kotlin/Replace assignment with 'when' expression" />
    <ignoreAction name="Kotlin/Replace by reconstructed type" />
    <ignoreAction name="Kotlin/Replace call with binary operator" />
    <ignoreAction name="Kotlin/Replace call with unary operator" />
    <ignoreAction name="Kotlin/Replace elvis expression with 'if' expression" />
    <ignoreAction name="Kotlin/Replace explicit lambda parameter with 'it'" />
    <ignoreAction name="Kotlin/Replace infix call with ordinary call" />
    <ignoreAction name="Kotlin/Replace negated sequence with DeMorgan equivalent" />
    <ignoreAction name="Kotlin/Replace overloaded operator with function call" />
    <ignoreAction name="Kotlin/Replace property initializer with 'if' expression" />
    <ignoreAction name="Kotlin/Replace property initializer with 'when' expression" />
    <ignoreAction name="Kotlin/Replace return with 'if' expression" />
    <ignoreAction name="Kotlin/Replace return with 'when' expression" />
    <ignoreAction name="Kotlin/Replace safe access expression with 'if' expression" />
    <ignoreAction name="Kotlin/Replace with a 'for' loop" />
    <ignoreAction name="Kotlin/Replace with a 'forEach' function call" />
    <ignoreAction name="Kotlin/Replace with infix function call" />
    <ignoreAction name="Kotlin/Replace with operator-assignment" />
    <ignoreAction name="Kotlin/Replace with ordinary assignment" />
    <ignoreAction name="Kotlin/Simplify 'for'" />
    <ignoreAction name="Kotlin/Simplify boolean expression" />
    <ignoreAction name="Kotlin/Simplify negated binary expression" />
    <ignoreAction name="Kotlin/Specify explicit lambda signature" />
    <ignoreAction name="Kotlin/Specify type explicitly" />
    <ignoreAction name="Kotlin/Split if into 2 if's" />
    <ignoreAction name="Kotlin/Split property declaration" />
    <ignoreAction name="Kotlin/To ordinary string literal" />
    <ignoreAction name="Kotlin/To raw string literal" />
    <ignoreAction name="Kotlin/Use property access syntax" />
    <ignoreAction name="Language Injection/Edit Injected Fragment" />
    <ignoreAction name="Language Injection/Edit Injection Settings" />
    <ignoreAction name="Language Injection/Inject language or reference" />
    <ignoreAction name="Language Injection/Un-inject Language/Reference" />
    <ignoreAction name="PHP/Add @property" />
    <ignoreAction name="PHP/Add PHPDoc comment" />
    <ignoreAction name="PHP/Add fluent setter" />
    <ignoreAction name="PHP/Add getter" />
    <ignoreAction name="PHP/Add getter and setter" />
    <ignoreAction name="PHP/Add setter" />
    <ignoreAction name="PHP/Convert HEREDOC/NOWDOC to string literal" />
    <ignoreAction name="PHP/Convert array to short syntax" />
    <ignoreAction name="PHP/Convert array to traditional syntax" />
    <ignoreAction name="PHP/Convert namespace to braced" />
    <ignoreAction name="PHP/Convert string literal to HEREDOC/NOWDOC" />
    <ignoreAction name="PHP/Declare field" />
    <ignoreAction name="PHP/Flip binary expression" />
    <ignoreAction name="PHP/Flip if-else" />
    <ignoreAction name="PHP/Generate PHPDoc for function" />
    <ignoreAction name="PHP/Group use statements by selected prefix" />
    <ignoreAction name="PHP/Import class" />
    <ignoreAction name="PHP/Initialize fields" />
    <ignoreAction name="PHP/Inject language using PHPDoc" />
    <ignoreAction name="PHP/Replace 'if' with 'switch'" />
    <ignoreAction name="PHP/Replace 'switch' with 'if'" />
    <ignoreAction name="PHP/Replace if clause with ternary expression" />
    <ignoreAction name="PHP/Replace quotes" />
    <ignoreAction name="PHP/Replace ternary expression with if clause" />
    <ignoreAction name="PHP/Simplify FQN" />
    <ignoreAction name="PHP/Simplify boolean expression" />
    <ignoreAction name="PHP/Split selected group use statement" />
    <ignoreAction name="PHP/Split string in two strings and concatenation" />
    <ignoreAction name="PHP/Surround with '!empty'" />
    <ignoreAction name="PHP/Surround with 'isset'" />
    <ignoreAction name="PHP/Swap call arguments" />
    <ignoreAction name="RegExp/Declaration/Check RegExp" />
    <ignoreAction name="Ruby/Add @param tag" />
    <ignoreAction name="Ruby/Add @return tag" />
    <ignoreAction name="Ruby/Append current directory to path" />
    <ignoreAction name="Ruby/Convert ':' to '=&gt;'" />
    <ignoreAction name="Ruby/Convert '=&gt;' to ':'" />
    <ignoreAction name="Ruby/Convert 'do' block to { }" />
    <ignoreAction name="Ruby/Convert all ':' to '=&gt;'" />
    <ignoreAction name="Ruby/Convert all '=&gt;' to ':'" />
    <ignoreAction name="Ruby/Convert concatenation of strings to substitutions #{}" />
    <ignoreAction name="Ruby/Convert heredoc to squiggly heredoc" />
    <ignoreAction name="Ruby/Convert if/then/else/end block to ternary operator" />
    <ignoreAction name="Ruby/Convert modifier to statement" />
    <ignoreAction name="Ruby/Convert relative path to absolute" />
    <ignoreAction name="Ruby/Convert statement to modifier" />
    <ignoreAction name="Ruby/Convert string to symbol" />
    <ignoreAction name="Ruby/Convert symbol to string" />
    <ignoreAction name="Ruby/Convert ternary operator to if/then/else/end block" />
    <ignoreAction name="Ruby/Convert to camel case dot reference" />
    <ignoreAction name="Ruby/Convert to dot reference" />
    <ignoreAction name="Ruby/Convert to erb comment" />
    <ignoreAction name="Ruby/Convert to ruby call style" />
    <ignoreAction name="Ruby/Convert { } to 'do' block" />
    <ignoreAction name="Ruby/I18n string value" />
    <ignoreAction name="Ruby/Import Java class" />
    <ignoreAction name="Ruby/Replace safe navigation with chained calls conjunction" />
    <ignoreAction name="Ruby/Replace safe navigation with nested nil checks" />
    <ignoreAction name="SQL/Expand column list" />
    <ignoreAction name="SQL/Inject by Type" />
    <ignoreAction name="SQL/Qualify identifier" />
    <ignoreAction name="SQL/Quote identifier" />
    <ignoreAction name="SQL/Split string literal" />
    <ignoreAction name="SQL/Unqualify identifier" />
    <ignoreAction name="SQL/Unquote identifier" />
    <ignoreAction name="TypeScript/Generate reference path comment" />
    <ignoreAction name="TypeScript/Make 'private'" />
    <ignoreAction name="TypeScript/Make 'protected'" />
    <ignoreAction name="TypeScript/Make 'public'" />
    <ignoreAction name="TypeScript/Remove type declaration" />
    <ignoreAction name="TypeScript/Specify variable type explicitly" />
    <ignoreAction name="XML/Add Xsi schema location for external resource" />
    <ignoreAction name="XML/Choose Color" />
    <ignoreAction name="XML/Collapse empty tag" />
    <ignoreAction name="XML/Expand Empty Tag" />
    <ignoreAction name="XML/Fetch external resource" />
    <ignoreAction name="XML/Insert namespace prefix" />
    <ignoreAction name="XML/Manually setup external resource" />
    <ignoreAction name="XML/Merge Tags" />
    <ignoreAction name="XML/Reset to default namespace" />
    <ignoreAction name="XML/Split current tag" />
    <ignoreAction name="XSLT/Add optional Argument(s)" />
    <ignoreAction name="XSLT/Convert if to choose" />
    <ignoreAction name="XSLT/Inline xsl:attribute" />
    <ignoreAction name="XSLT/Replace with xsl:attribute" />
  </component>
</application>